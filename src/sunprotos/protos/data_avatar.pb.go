// Code generated by protoc-gen-go.
// source: data_avatar.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AvatarCustomization_Label int32

const (
	AvatarCustomization_UNSET_LABEL        AvatarCustomization_Label = 0
	AvatarCustomization_DEFAULT            AvatarCustomization_Label = 1
	AvatarCustomization_OWNED              AvatarCustomization_Label = 2
	AvatarCustomization_FEATURED           AvatarCustomization_Label = 3
	AvatarCustomization_NEW                AvatarCustomization_Label = 4
	AvatarCustomization_SALE               AvatarCustomization_Label = 5
	AvatarCustomization_PURCHASABLE        AvatarCustomization_Label = 6
	AvatarCustomization_UNLOCKABLE         AvatarCustomization_Label = 7
	AvatarCustomization_VIEWED             AvatarCustomization_Label = 8
	AvatarCustomization_LOCKED_PURCHASABLE AvatarCustomization_Label = 9
)

var AvatarCustomization_Label_name = map[int32]string{
	0: "UNSET_LABEL",
	1: "DEFAULT",
	2: "OWNED",
	3: "FEATURED",
	4: "NEW",
	5: "SALE",
	6: "PURCHASABLE",
	7: "UNLOCKABLE",
	8: "VIEWED",
	9: "LOCKED_PURCHASABLE",
}
var AvatarCustomization_Label_value = map[string]int32{
	"UNSET_LABEL":        0,
	"DEFAULT":            1,
	"OWNED":              2,
	"FEATURED":           3,
	"NEW":                4,
	"SALE":               5,
	"PURCHASABLE":        6,
	"UNLOCKABLE":         7,
	"VIEWED":             8,
	"LOCKED_PURCHASABLE": 9,
}

func (x AvatarCustomization_Label) String() string {
	return proto.EnumName(AvatarCustomization_Label_name, int32(x))
}
func (AvatarCustomization_Label) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type AvatarCustomization struct {
	AvatarTemplateId string                      `protobuf:"bytes,1,opt,name=avatar_template_id,json=avatarTemplateId" json:"avatar_template_id,omitempty"`
	Labels           []AvatarCustomization_Label `protobuf:"varint,2,rep,packed,name=labels,enum=SUNProtos.Data.Avatar.AvatarCustomization_Label" json:"labels,omitempty"`
}

func (m *AvatarCustomization) Reset()                    { *m = AvatarCustomization{} }
func (m *AvatarCustomization) String() string            { return proto.CompactTextString(m) }
func (*AvatarCustomization) ProtoMessage()               {}
func (*AvatarCustomization) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *AvatarCustomization) GetAvatarTemplateId() string {
	if m != nil {
		return m.AvatarTemplateId
	}
	return ""
}

func (m *AvatarCustomization) GetLabels() []AvatarCustomization_Label {
	if m != nil {
		return m.Labels
	}
	return nil
}

type AvatarItem struct {
	AvatarTemplateId string `protobuf:"bytes,1,opt,name=avatar_template_id,json=avatarTemplateId" json:"avatar_template_id,omitempty"`
	NewTimestampMs   int64  `protobuf:"varint,2,opt,name=new_timestamp_ms,json=newTimestampMs" json:"new_timestamp_ms,omitempty"`
	Viewed           bool   `protobuf:"varint,3,opt,name=viewed" json:"viewed,omitempty"`
}

func (m *AvatarItem) Reset()                    { *m = AvatarItem{} }
func (m *AvatarItem) String() string            { return proto.CompactTextString(m) }
func (*AvatarItem) ProtoMessage()               {}
func (*AvatarItem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *AvatarItem) GetAvatarTemplateId() string {
	if m != nil {
		return m.AvatarTemplateId
	}
	return ""
}

func (m *AvatarItem) GetNewTimestampMs() int64 {
	if m != nil {
		return m.NewTimestampMs
	}
	return 0
}

func (m *AvatarItem) GetViewed() bool {
	if m != nil {
		return m.Viewed
	}
	return false
}

func init() {
	proto.RegisterType((*AvatarCustomization)(nil), "SUNProtos.Data.Avatar.AvatarCustomization")
	proto.RegisterType((*AvatarItem)(nil), "SUNProtos.Data.Avatar.AvatarItem")
	proto.RegisterEnum("SUNProtos.Data.Avatar.AvatarCustomization_Label", AvatarCustomization_Label_name, AvatarCustomization_Label_value)
}

func init() { proto.RegisterFile("data_avatar.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcd, 0x6a, 0xf2, 0x40,
	0x14, 0x86, 0xbf, 0x18, 0x8d, 0xf1, 0xf8, 0x61, 0xa7, 0xa7, 0x54, 0x5c, 0x8a, 0xab, 0x2c, 0x4a,
	0x28, 0xed, 0x15, 0x8c, 0x66, 0x44, 0xe9, 0x34, 0x4a, 0x7e, 0x2a, 0x74, 0x33, 0x8c, 0x64, 0x16,
	0x01, 0x63, 0xc4, 0x4c, 0x15, 0x4a, 0xaf, 0xa3, 0x97, 0xd0, 0xeb, 0x2c, 0xf9, 0x29, 0x74, 0xe1,
	0xa6, 0xab, 0x39, 0xe7, 0x3c, 0x3c, 0x73, 0x86, 0x77, 0xe0, 0x3a, 0x91, 0x5a, 0x0a, 0x79, 0x92,
	0x5a, 0x1e, 0xdd, 0xc3, 0x31, 0xd7, 0x39, 0xde, 0x86, 0xb1, 0xbf, 0x2e, 0xab, 0xc2, 0xf5, 0xa4,
	0x96, 0x2e, 0xad, 0xe0, 0xe4, 0xab, 0x05, 0x37, 0x75, 0x39, 0x7b, 0x2b, 0x74, 0x9e, 0xa5, 0xef,
	0x52, 0xa7, 0xf9, 0x1e, 0xef, 0x00, 0x6b, 0x5d, 0x68, 0x95, 0x1d, 0x76, 0x52, 0x2b, 0x91, 0x26,
	0x23, 0x63, 0x6c, 0x38, 0xbd, 0x80, 0xd4, 0x24, 0x6a, 0xc0, 0x32, 0xc1, 0x05, 0x58, 0x3b, 0xb9,
	0x55, 0xbb, 0x62, 0xd4, 0x1a, 0x9b, 0xce, 0xe0, 0xe1, 0xde, 0xbd, 0xb8, 0xcd, 0xbd, 0xb0, 0xc9,
	0xe5, 0xa5, 0x18, 0x34, 0xfe, 0xe4, 0xd3, 0x80, 0x4e, 0x35, 0xc1, 0x2b, 0xe8, 0xc7, 0x7e, 0xc8,
	0x22, 0xc1, 0xe9, 0x94, 0x71, 0xf2, 0x0f, 0xfb, 0xd0, 0xf5, 0xd8, 0x9c, 0xc6, 0x3c, 0x22, 0x06,
	0xf6, 0xa0, 0xb3, 0xda, 0xf8, 0xcc, 0x23, 0x2d, 0xfc, 0x0f, 0xf6, 0x9c, 0xd1, 0x28, 0x0e, 0x98,
	0x47, 0x4c, 0xec, 0x82, 0xe9, 0xb3, 0x0d, 0x69, 0xa3, 0x0d, 0xed, 0x90, 0x72, 0x46, 0x3a, 0xe5,
	0x4d, 0xeb, 0x38, 0x98, 0x2d, 0x68, 0x48, 0xa7, 0x9c, 0x11, 0x0b, 0x07, 0x00, 0xb1, 0xcf, 0x57,
	0xb3, 0xa7, 0xaa, 0xef, 0x22, 0x80, 0xf5, 0xb2, 0x64, 0x1b, 0xe6, 0x11, 0x1b, 0x87, 0x80, 0x25,
	0x61, 0x9e, 0xf8, 0xed, 0xf4, 0x26, 0x1f, 0x00, 0xf5, 0xeb, 0x97, 0x5a, 0x65, 0x7f, 0x8c, 0xc7,
	0x01, 0xb2, 0x57, 0x67, 0xa1, 0xd3, 0x4c, 0x15, 0x5a, 0x66, 0x07, 0x91, 0x95, 0x41, 0x19, 0x8e,
	0x19, 0x0c, 0xf6, 0xea, 0x1c, 0xfd, 0x8c, 0x9f, 0x0b, 0x1c, 0x82, 0x75, 0x4a, 0xd5, 0x59, 0x25,
	0x23, 0x73, 0x6c, 0x38, 0x76, 0xd0, 0x74, 0x53, 0xfb, 0xd5, 0xaa, 0xbe, 0xb1, 0xd8, 0xd6, 0xe7,
	0xe3, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0d, 0xa1, 0x6f, 0x15, 0xe3, 0x01, 0x00, 0x00,
}
