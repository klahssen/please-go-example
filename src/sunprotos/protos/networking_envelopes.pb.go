// Code generated by protoc-gen-go.
// source: networking_envelopes.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of Request from networking_requests.proto

// Ignoring public import of RequestType from networking_requests.proto

// Ignoring public import of PlatformRequestType from networking_platform.proto

type ResponseEnvelope_StatusCode int32

const (
	ResponseEnvelope_UNKNOWN                  ResponseEnvelope_StatusCode = 0
	ResponseEnvelope_OK                       ResponseEnvelope_StatusCode = 1
	ResponseEnvelope_OK_RPC_URL_IN_RESPONSE   ResponseEnvelope_StatusCode = 2
	ResponseEnvelope_BAD_REQUEST              ResponseEnvelope_StatusCode = 3
	ResponseEnvelope_INVALID_REQUEST          ResponseEnvelope_StatusCode = 51
	ResponseEnvelope_INVALID_PLATFORM_REQUEST ResponseEnvelope_StatusCode = 52
	ResponseEnvelope_REDIRECT                 ResponseEnvelope_StatusCode = 53
	ResponseEnvelope_SESSION_INVALIDATED      ResponseEnvelope_StatusCode = 100
	ResponseEnvelope_INVALID_AUTH_TOKEN       ResponseEnvelope_StatusCode = 102
)

var ResponseEnvelope_StatusCode_name = map[int32]string{
	0:   "UNKNOWN",
	1:   "OK",
	2:   "OK_RPC_URL_IN_RESPONSE",
	3:   "BAD_REQUEST",
	51:  "INVALID_REQUEST",
	52:  "INVALID_PLATFORM_REQUEST",
	53:  "REDIRECT",
	100: "SESSION_INVALIDATED",
	102: "INVALID_AUTH_TOKEN",
}
var ResponseEnvelope_StatusCode_value = map[string]int32{
	"UNKNOWN": 0,
	"OK":      1,
	"OK_RPC_URL_IN_RESPONSE":   2,
	"BAD_REQUEST":              3,
	"INVALID_REQUEST":          51,
	"INVALID_PLATFORM_REQUEST": 52,
	"REDIRECT":                 53,
	"SESSION_INVALIDATED":      100,
	"INVALID_AUTH_TOKEN":       102,
}

func (x ResponseEnvelope_StatusCode) String() string {
	return proto.EnumName(ResponseEnvelope_StatusCode_name, int32(x))
}
func (ResponseEnvelope_StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor16, []int{2, 0}
}

type AuthTicket struct {
	Start             []byte `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	ExpireTimestampMs uint64 `protobuf:"varint,2,opt,name=expire_timestamp_ms,json=expireTimestampMs" json:"expire_timestamp_ms,omitempty"`
	End               []byte `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (m *AuthTicket) Reset()                    { *m = AuthTicket{} }
func (m *AuthTicket) String() string            { return proto.CompactTextString(m) }
func (*AuthTicket) ProtoMessage()               {}
func (*AuthTicket) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{0} }

func (m *AuthTicket) GetStart() []byte {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *AuthTicket) GetExpireTimestampMs() uint64 {
	if m != nil {
		return m.ExpireTimestampMs
	}
	return 0
}

func (m *AuthTicket) GetEnd() []byte {
	if m != nil {
		return m.End
	}
	return nil
}

type RequestEnvelope struct {
	StatusCode             int32                              `protobuf:"varint,1,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	RequestId              uint64                             `protobuf:"varint,3,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Requests               []*Request                         `protobuf:"bytes,4,rep,name=requests" json:"requests,omitempty"`
	PlatformRequests       []*RequestEnvelope_PlatformRequest `protobuf:"bytes,6,rep,name=platform_requests,json=platformRequests" json:"platform_requests,omitempty"`
	Latitude               float64                            `protobuf:"fixed64,7,opt,name=latitude" json:"latitude,omitempty"`
	Longitude              float64                            `protobuf:"fixed64,8,opt,name=longitude" json:"longitude,omitempty"`
	Accuracy               float64                            `protobuf:"fixed64,9,opt,name=accuracy" json:"accuracy,omitempty"`
	AuthInfo               *RequestEnvelope_AuthInfo          `protobuf:"bytes,10,opt,name=auth_info,json=authInfo" json:"auth_info,omitempty"`
	AuthTicket             *AuthTicket                        `protobuf:"bytes,11,opt,name=auth_ticket,json=authTicket" json:"auth_ticket,omitempty"`
	MsSinceLastLocationfix int64                              `protobuf:"varint,12,opt,name=ms_since_last_locationfix,json=msSinceLastLocationfix" json:"ms_since_last_locationfix,omitempty"`
}

func (m *RequestEnvelope) Reset()                    { *m = RequestEnvelope{} }
func (m *RequestEnvelope) String() string            { return proto.CompactTextString(m) }
func (*RequestEnvelope) ProtoMessage()               {}
func (*RequestEnvelope) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{1} }

func (m *RequestEnvelope) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RequestEnvelope) GetRequestId() uint64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *RequestEnvelope) GetRequests() []*Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *RequestEnvelope) GetPlatformRequests() []*RequestEnvelope_PlatformRequest {
	if m != nil {
		return m.PlatformRequests
	}
	return nil
}

func (m *RequestEnvelope) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *RequestEnvelope) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *RequestEnvelope) GetAccuracy() float64 {
	if m != nil {
		return m.Accuracy
	}
	return 0
}

func (m *RequestEnvelope) GetAuthInfo() *RequestEnvelope_AuthInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

func (m *RequestEnvelope) GetAuthTicket() *AuthTicket {
	if m != nil {
		return m.AuthTicket
	}
	return nil
}

func (m *RequestEnvelope) GetMsSinceLastLocationfix() int64 {
	if m != nil {
		return m.MsSinceLastLocationfix
	}
	return 0
}

type RequestEnvelope_AuthInfo struct {
	Provider string                        `protobuf:"bytes,1,opt,name=provider" json:"provider,omitempty"`
	Token    *RequestEnvelope_AuthInfo_JWT `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *RequestEnvelope_AuthInfo) Reset()                    { *m = RequestEnvelope_AuthInfo{} }
func (m *RequestEnvelope_AuthInfo) String() string            { return proto.CompactTextString(m) }
func (*RequestEnvelope_AuthInfo) ProtoMessage()               {}
func (*RequestEnvelope_AuthInfo) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{1, 0} }

func (m *RequestEnvelope_AuthInfo) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *RequestEnvelope_AuthInfo) GetToken() *RequestEnvelope_AuthInfo_JWT {
	if m != nil {
		return m.Token
	}
	return nil
}

type RequestEnvelope_AuthInfo_JWT struct {
	Contents string `protobuf:"bytes,1,opt,name=contents" json:"contents,omitempty"`
	Unknown2 int32  `protobuf:"varint,2,opt,name=unknown2" json:"unknown2,omitempty"`
}

func (m *RequestEnvelope_AuthInfo_JWT) Reset()         { *m = RequestEnvelope_AuthInfo_JWT{} }
func (m *RequestEnvelope_AuthInfo_JWT) String() string { return proto.CompactTextString(m) }
func (*RequestEnvelope_AuthInfo_JWT) ProtoMessage()    {}
func (*RequestEnvelope_AuthInfo_JWT) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{1, 0, 0}
}

func (m *RequestEnvelope_AuthInfo_JWT) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *RequestEnvelope_AuthInfo_JWT) GetUnknown2() int32 {
	if m != nil {
		return m.Unknown2
	}
	return 0
}

type RequestEnvelope_PlatformRequest struct {
	Type           PlatformRequestType `protobuf:"varint,1,opt,name=type,enum=SUNProtos.Networking.Platform.PlatformRequestType" json:"type,omitempty"`
	RequestMessage []byte              `protobuf:"bytes,2,opt,name=request_message,json=requestMessage,proto3" json:"request_message,omitempty"`
}

func (m *RequestEnvelope_PlatformRequest) Reset()         { *m = RequestEnvelope_PlatformRequest{} }
func (m *RequestEnvelope_PlatformRequest) String() string { return proto.CompactTextString(m) }
func (*RequestEnvelope_PlatformRequest) ProtoMessage()    {}
func (*RequestEnvelope_PlatformRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{1, 1}
}

func (m *RequestEnvelope_PlatformRequest) GetType() PlatformRequestType {
	if m != nil {
		return m.Type
	}
	return PlatformRequestType_METHOD_UNSET
}

func (m *RequestEnvelope_PlatformRequest) GetRequestMessage() []byte {
	if m != nil {
		return m.RequestMessage
	}
	return nil
}

type ResponseEnvelope struct {
	StatusCode      ResponseEnvelope_StatusCode          `protobuf:"varint,1,opt,name=status_code,json=statusCode,enum=SUNProtos.Networking.Envelopes.ResponseEnvelope_StatusCode" json:"status_code,omitempty"`
	RequestId       uint64                               `protobuf:"varint,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	ApiUrl          string                               `protobuf:"bytes,3,opt,name=api_url,json=apiUrl" json:"api_url,omitempty"`
	PlatformReturns []*ResponseEnvelope_PlatformResponse `protobuf:"bytes,6,rep,name=platform_returns,json=platformReturns" json:"platform_returns,omitempty"`
	AuthTicket      *AuthTicket                          `protobuf:"bytes,7,opt,name=auth_ticket,json=authTicket" json:"auth_ticket,omitempty"`
	Returns         [][]byte                             `protobuf:"bytes,100,rep,name=returns,proto3" json:"returns,omitempty"`
	Error           string                               `protobuf:"bytes,101,opt,name=error" json:"error,omitempty"`
}

func (m *ResponseEnvelope) Reset()                    { *m = ResponseEnvelope{} }
func (m *ResponseEnvelope) String() string            { return proto.CompactTextString(m) }
func (*ResponseEnvelope) ProtoMessage()               {}
func (*ResponseEnvelope) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{2} }

func (m *ResponseEnvelope) GetStatusCode() ResponseEnvelope_StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return ResponseEnvelope_UNKNOWN
}

func (m *ResponseEnvelope) GetRequestId() uint64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *ResponseEnvelope) GetApiUrl() string {
	if m != nil {
		return m.ApiUrl
	}
	return ""
}

func (m *ResponseEnvelope) GetPlatformReturns() []*ResponseEnvelope_PlatformResponse {
	if m != nil {
		return m.PlatformReturns
	}
	return nil
}

func (m *ResponseEnvelope) GetAuthTicket() *AuthTicket {
	if m != nil {
		return m.AuthTicket
	}
	return nil
}

func (m *ResponseEnvelope) GetReturns() [][]byte {
	if m != nil {
		return m.Returns
	}
	return nil
}

func (m *ResponseEnvelope) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ResponseEnvelope_PlatformResponse struct {
	Type     PlatformRequestType `protobuf:"varint,1,opt,name=type,enum=SUNProtos.Networking.Platform.PlatformRequestType" json:"type,omitempty"`
	Response []byte              `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (m *ResponseEnvelope_PlatformResponse) Reset()         { *m = ResponseEnvelope_PlatformResponse{} }
func (m *ResponseEnvelope_PlatformResponse) String() string { return proto.CompactTextString(m) }
func (*ResponseEnvelope_PlatformResponse) ProtoMessage()    {}
func (*ResponseEnvelope_PlatformResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{2, 0}
}

func (m *ResponseEnvelope_PlatformResponse) GetType() PlatformRequestType {
	if m != nil {
		return m.Type
	}
	return PlatformRequestType_METHOD_UNSET
}

func (m *ResponseEnvelope_PlatformResponse) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

type Signature struct {
	Field1              []*UnknownMessage           `protobuf:"bytes,1,rep,name=field1" json:"field1,omitempty"`
	TimestampSinceStart uint64                      `protobuf:"varint,2,opt,name=timestamp_since_start,json=timestampSinceStart" json:"timestamp_since_start,omitempty"`
	Field3              string                      `protobuf:"bytes,3,opt,name=field3" json:"field3,omitempty"`
	LocationFix         []*Signature_LocationFix    `protobuf:"bytes,4,rep,name=location_fix,json=locationFix" json:"location_fix,omitempty"`
	GpsInfo             []*Signature_AndroidGpsInfo `protobuf:"bytes,5,rep,name=gps_info,json=gpsInfo" json:"gps_info,omitempty"`
	Field6              []*UnknownMessage           `protobuf:"bytes,6,rep,name=field6" json:"field6,omitempty"`
	SensorInfo          []*Signature_SensorInfo     `protobuf:"bytes,7,rep,name=sensor_info,json=sensorInfo" json:"sensor_info,omitempty"`
	DeviceInfo          *Signature_DeviceInfo       `protobuf:"bytes,8,opt,name=device_info,json=deviceInfo" json:"device_info,omitempty"`
	ActivityStatus      *Signature_ActivityStatus   `protobuf:"bytes,9,opt,name=activity_status,json=activityStatus" json:"activity_status,omitempty"`
	LocationHash1       int32                       `protobuf:"varint,10,opt,name=location_hash1,json=locationHash1" json:"location_hash1,omitempty"`
	Field11             bool                        `protobuf:"varint,11,opt,name=field11" json:"field11,omitempty"`
	Field12             bool                        `protobuf:"varint,12,opt,name=field12" json:"field12,omitempty"`
	Field13             int32                       `protobuf:"varint,13,opt,name=field13" json:"field13,omitempty"`
	Field14             int32                       `protobuf:"varint,14,opt,name=field14" json:"field14,omitempty"`
	Field15             string                      `protobuf:"bytes,15,opt,name=field15" json:"field15,omitempty"`
	Field16             int32                       `protobuf:"varint,16,opt,name=field16" json:"field16,omitempty"`
	Field17             string                      `protobuf:"bytes,17,opt,name=field17" json:"field17,omitempty"`
	Field18             string                      `protobuf:"bytes,18,opt,name=field18" json:"field18,omitempty"`
	Field19             bool                        `protobuf:"varint,19,opt,name=field19" json:"field19,omitempty"`
	LocationHash2       int32                       `protobuf:"varint,20,opt,name=location_hash2,json=locationHash2" json:"location_hash2,omitempty"`
	Field21             bool                        `protobuf:"varint,21,opt,name=field21" json:"field21,omitempty"`
	SessionHash         []byte                      `protobuf:"bytes,22,opt,name=session_hash,json=sessionHash,proto3" json:"session_hash,omitempty"`
	Timestamp           uint64                      `protobuf:"varint,23,opt,name=timestamp" json:"timestamp,omitempty"`
	RequestHash         []uint64                    `protobuf:"varint,24,rep,packed,name=request_hash,json=requestHash" json:"request_hash,omitempty"`
	Unknown25           int64                       `protobuf:"varint,25,opt,name=unknown25" json:"unknown25,omitempty"`
}

func (m *Signature) Reset()                    { *m = Signature{} }
func (m *Signature) String() string            { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()               {}
func (*Signature) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{3} }

func (m *Signature) GetField1() []*UnknownMessage {
	if m != nil {
		return m.Field1
	}
	return nil
}

func (m *Signature) GetTimestampSinceStart() uint64 {
	if m != nil {
		return m.TimestampSinceStart
	}
	return 0
}

func (m *Signature) GetField3() string {
	if m != nil {
		return m.Field3
	}
	return ""
}

func (m *Signature) GetLocationFix() []*Signature_LocationFix {
	if m != nil {
		return m.LocationFix
	}
	return nil
}

func (m *Signature) GetGpsInfo() []*Signature_AndroidGpsInfo {
	if m != nil {
		return m.GpsInfo
	}
	return nil
}

func (m *Signature) GetField6() []*UnknownMessage {
	if m != nil {
		return m.Field6
	}
	return nil
}

func (m *Signature) GetSensorInfo() []*Signature_SensorInfo {
	if m != nil {
		return m.SensorInfo
	}
	return nil
}

func (m *Signature) GetDeviceInfo() *Signature_DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

func (m *Signature) GetActivityStatus() *Signature_ActivityStatus {
	if m != nil {
		return m.ActivityStatus
	}
	return nil
}

func (m *Signature) GetLocationHash1() int32 {
	if m != nil {
		return m.LocationHash1
	}
	return 0
}

func (m *Signature) GetField11() bool {
	if m != nil {
		return m.Field11
	}
	return false
}

func (m *Signature) GetField12() bool {
	if m != nil {
		return m.Field12
	}
	return false
}

func (m *Signature) GetField13() int32 {
	if m != nil {
		return m.Field13
	}
	return 0
}

func (m *Signature) GetField14() int32 {
	if m != nil {
		return m.Field14
	}
	return 0
}

func (m *Signature) GetField15() string {
	if m != nil {
		return m.Field15
	}
	return ""
}

func (m *Signature) GetField16() int32 {
	if m != nil {
		return m.Field16
	}
	return 0
}

func (m *Signature) GetField17() string {
	if m != nil {
		return m.Field17
	}
	return ""
}

func (m *Signature) GetField18() string {
	if m != nil {
		return m.Field18
	}
	return ""
}

func (m *Signature) GetField19() bool {
	if m != nil {
		return m.Field19
	}
	return false
}

func (m *Signature) GetLocationHash2() int32 {
	if m != nil {
		return m.LocationHash2
	}
	return 0
}

func (m *Signature) GetField21() bool {
	if m != nil {
		return m.Field21
	}
	return false
}

func (m *Signature) GetSessionHash() []byte {
	if m != nil {
		return m.SessionHash
	}
	return nil
}

func (m *Signature) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Signature) GetRequestHash() []uint64 {
	if m != nil {
		return m.RequestHash
	}
	return nil
}

func (m *Signature) GetUnknown25() int64 {
	if m != nil {
		return m.Unknown25
	}
	return 0
}

type Signature_LocationFix struct {
	Provider           string  `protobuf:"bytes,1,opt,name=provider" json:"provider,omitempty"`
	TimestampSnapshot  uint64  `protobuf:"varint,2,opt,name=timestamp_snapshot,json=timestampSnapshot" json:"timestamp_snapshot,omitempty"`
	Altitude           float32 `protobuf:"fixed32,4,opt,name=altitude" json:"altitude,omitempty"`
	Latitude           float32 `protobuf:"fixed32,13,opt,name=latitude" json:"latitude,omitempty"`
	Longitude          float32 `protobuf:"fixed32,14,opt,name=longitude" json:"longitude,omitempty"`
	Speed              float32 `protobuf:"fixed32,18,opt,name=speed" json:"speed,omitempty"`
	Course             float32 `protobuf:"fixed32,20,opt,name=course" json:"course,omitempty"`
	HorizontalAccuracy float32 `protobuf:"fixed32,21,opt,name=horizontal_accuracy,json=horizontalAccuracy" json:"horizontal_accuracy,omitempty"`
	VerticalAccuracy   float32 `protobuf:"fixed32,22,opt,name=vertical_accuracy,json=verticalAccuracy" json:"vertical_accuracy,omitempty"`
	ProviderStatus     uint64  `protobuf:"varint,26,opt,name=provider_status,json=providerStatus" json:"provider_status,omitempty"`
	// On iOS there are some LocationFixes with unk26=1 and everything else empty
	Floor        uint32 `protobuf:"varint,27,opt,name=floor" json:"floor,omitempty"`
	LocationType uint64 `protobuf:"varint,28,opt,name=location_type,json=locationType" json:"location_type,omitempty"`
}

func (m *Signature_LocationFix) Reset()                    { *m = Signature_LocationFix{} }
func (m *Signature_LocationFix) String() string            { return proto.CompactTextString(m) }
func (*Signature_LocationFix) ProtoMessage()               {}
func (*Signature_LocationFix) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{3, 0} }

func (m *Signature_LocationFix) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Signature_LocationFix) GetTimestampSnapshot() uint64 {
	if m != nil {
		return m.TimestampSnapshot
	}
	return 0
}

func (m *Signature_LocationFix) GetAltitude() float32 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *Signature_LocationFix) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Signature_LocationFix) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Signature_LocationFix) GetSpeed() float32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *Signature_LocationFix) GetCourse() float32 {
	if m != nil {
		return m.Course
	}
	return 0
}

func (m *Signature_LocationFix) GetHorizontalAccuracy() float32 {
	if m != nil {
		return m.HorizontalAccuracy
	}
	return 0
}

func (m *Signature_LocationFix) GetVerticalAccuracy() float32 {
	if m != nil {
		return m.VerticalAccuracy
	}
	return 0
}

func (m *Signature_LocationFix) GetProviderStatus() uint64 {
	if m != nil {
		return m.ProviderStatus
	}
	return 0
}

func (m *Signature_LocationFix) GetFloor() uint32 {
	if m != nil {
		return m.Floor
	}
	return 0
}

func (m *Signature_LocationFix) GetLocationType() uint64 {
	if m != nil {
		return m.LocationType
	}
	return 0
}

// don't really care about this since we're not using it
type Signature_AndroidGpsInfo struct {
	TimeToFix     uint64    `protobuf:"varint,1,opt,name=time_to_fix,json=timeToFix" json:"time_to_fix,omitempty"`
	SatellitesPrn []int32   `protobuf:"varint,2,rep,packed,name=satellites_prn,json=satellitesPrn" json:"satellites_prn,omitempty"`
	Azimuth       []float32 `protobuf:"fixed32,3,rep,packed,name=azimuth" json:"azimuth,omitempty"`
	Elevation     []float32 `protobuf:"fixed32,4,rep,packed,name=elevation" json:"elevation,omitempty"`
	Snr           []float32 `protobuf:"fixed32,5,rep,packed,name=snr" json:"snr,omitempty"`
	HasAlmanac    []bool    `protobuf:"varint,6,rep,packed,name=has_almanac,json=hasAlmanac" json:"has_almanac,omitempty"`
	HasEphemeris  []bool    `protobuf:"varint,7,rep,packed,name=has_ephemeris,json=hasEphemeris" json:"has_ephemeris,omitempty"`
	UsedInFix     []bool    `protobuf:"varint,8,rep,packed,name=used_in_fix,json=usedInFix" json:"used_in_fix,omitempty"`
}

func (m *Signature_AndroidGpsInfo) Reset()                    { *m = Signature_AndroidGpsInfo{} }
func (m *Signature_AndroidGpsInfo) String() string            { return proto.CompactTextString(m) }
func (*Signature_AndroidGpsInfo) ProtoMessage()               {}
func (*Signature_AndroidGpsInfo) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{3, 1} }

func (m *Signature_AndroidGpsInfo) GetTimeToFix() uint64 {
	if m != nil {
		return m.TimeToFix
	}
	return 0
}

func (m *Signature_AndroidGpsInfo) GetSatellitesPrn() []int32 {
	if m != nil {
		return m.SatellitesPrn
	}
	return nil
}

func (m *Signature_AndroidGpsInfo) GetAzimuth() []float32 {
	if m != nil {
		return m.Azimuth
	}
	return nil
}

func (m *Signature_AndroidGpsInfo) GetElevation() []float32 {
	if m != nil {
		return m.Elevation
	}
	return nil
}

func (m *Signature_AndroidGpsInfo) GetSnr() []float32 {
	if m != nil {
		return m.Snr
	}
	return nil
}

func (m *Signature_AndroidGpsInfo) GetHasAlmanac() []bool {
	if m != nil {
		return m.HasAlmanac
	}
	return nil
}

func (m *Signature_AndroidGpsInfo) GetHasEphemeris() []bool {
	if m != nil {
		return m.HasEphemeris
	}
	return nil
}

func (m *Signature_AndroidGpsInfo) GetUsedInFix() []bool {
	if m != nil {
		return m.UsedInFix
	}
	return nil
}

type Signature_SensorInfo struct {
	TimestampSnapshot     uint64  `protobuf:"varint,1,opt,name=timestamp_snapshot,json=timestampSnapshot" json:"timestamp_snapshot,omitempty"`
	LinearAccelerationX   float64 `protobuf:"fixed64,3,opt,name=linear_acceleration_x,json=linearAccelerationX" json:"linear_acceleration_x,omitempty"`
	LinearAccelerationY   float64 `protobuf:"fixed64,4,opt,name=linear_acceleration_y,json=linearAccelerationY" json:"linear_acceleration_y,omitempty"`
	LinearAccelerationZ   float64 `protobuf:"fixed64,5,opt,name=linear_acceleration_z,json=linearAccelerationZ" json:"linear_acceleration_z,omitempty"`
	MagneticFieldX        float64 `protobuf:"fixed64,6,opt,name=magnetic_field_x,json=magneticFieldX" json:"magnetic_field_x,omitempty"`
	MagneticFieldY        float64 `protobuf:"fixed64,7,opt,name=magnetic_field_y,json=magneticFieldY" json:"magnetic_field_y,omitempty"`
	MagneticFieldZ        float64 `protobuf:"fixed64,8,opt,name=magnetic_field_z,json=magneticFieldZ" json:"magnetic_field_z,omitempty"`
	MagneticFieldAccuracy int32   `protobuf:"varint,9,opt,name=magnetic_field_accuracy,json=magneticFieldAccuracy" json:"magnetic_field_accuracy,omitempty"`
	AttitudePitch         float64 `protobuf:"fixed64,10,opt,name=attitude_pitch,json=attitudePitch" json:"attitude_pitch,omitempty"`
	AttitudeYaw           float64 `protobuf:"fixed64,11,opt,name=attitude_yaw,json=attitudeYaw" json:"attitude_yaw,omitempty"`
	AttitudeRoll          float64 `protobuf:"fixed64,12,opt,name=attitude_roll,json=attitudeRoll" json:"attitude_roll,omitempty"`
	RotationRateX         float64 `protobuf:"fixed64,13,opt,name=rotation_rate_x,json=rotationRateX" json:"rotation_rate_x,omitempty"`
	RotationRateY         float64 `protobuf:"fixed64,14,opt,name=rotation_rate_y,json=rotationRateY" json:"rotation_rate_y,omitempty"`
	RotationRateZ         float64 `protobuf:"fixed64,15,opt,name=rotation_rate_z,json=rotationRateZ" json:"rotation_rate_z,omitempty"`
	GravityX              float64 `protobuf:"fixed64,16,opt,name=gravity_x,json=gravityX" json:"gravity_x,omitempty"`
	GravityY              float64 `protobuf:"fixed64,17,opt,name=gravity_y,json=gravityY" json:"gravity_y,omitempty"`
	GravityZ              float64 `protobuf:"fixed64,18,opt,name=gravity_z,json=gravityZ" json:"gravity_z,omitempty"`
	Status                int32   `protobuf:"varint,19,opt,name=status" json:"status,omitempty"`
}

func (m *Signature_SensorInfo) Reset()                    { *m = Signature_SensorInfo{} }
func (m *Signature_SensorInfo) String() string            { return proto.CompactTextString(m) }
func (*Signature_SensorInfo) ProtoMessage()               {}
func (*Signature_SensorInfo) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{3, 2} }

func (m *Signature_SensorInfo) GetTimestampSnapshot() uint64 {
	if m != nil {
		return m.TimestampSnapshot
	}
	return 0
}

func (m *Signature_SensorInfo) GetLinearAccelerationX() float64 {
	if m != nil {
		return m.LinearAccelerationX
	}
	return 0
}

func (m *Signature_SensorInfo) GetLinearAccelerationY() float64 {
	if m != nil {
		return m.LinearAccelerationY
	}
	return 0
}

func (m *Signature_SensorInfo) GetLinearAccelerationZ() float64 {
	if m != nil {
		return m.LinearAccelerationZ
	}
	return 0
}

func (m *Signature_SensorInfo) GetMagneticFieldX() float64 {
	if m != nil {
		return m.MagneticFieldX
	}
	return 0
}

func (m *Signature_SensorInfo) GetMagneticFieldY() float64 {
	if m != nil {
		return m.MagneticFieldY
	}
	return 0
}

func (m *Signature_SensorInfo) GetMagneticFieldZ() float64 {
	if m != nil {
		return m.MagneticFieldZ
	}
	return 0
}

func (m *Signature_SensorInfo) GetMagneticFieldAccuracy() int32 {
	if m != nil {
		return m.MagneticFieldAccuracy
	}
	return 0
}

func (m *Signature_SensorInfo) GetAttitudePitch() float64 {
	if m != nil {
		return m.AttitudePitch
	}
	return 0
}

func (m *Signature_SensorInfo) GetAttitudeYaw() float64 {
	if m != nil {
		return m.AttitudeYaw
	}
	return 0
}

func (m *Signature_SensorInfo) GetAttitudeRoll() float64 {
	if m != nil {
		return m.AttitudeRoll
	}
	return 0
}

func (m *Signature_SensorInfo) GetRotationRateX() float64 {
	if m != nil {
		return m.RotationRateX
	}
	return 0
}

func (m *Signature_SensorInfo) GetRotationRateY() float64 {
	if m != nil {
		return m.RotationRateY
	}
	return 0
}

func (m *Signature_SensorInfo) GetRotationRateZ() float64 {
	if m != nil {
		return m.RotationRateZ
	}
	return 0
}

func (m *Signature_SensorInfo) GetGravityX() float64 {
	if m != nil {
		return m.GravityX
	}
	return 0
}

func (m *Signature_SensorInfo) GetGravityY() float64 {
	if m != nil {
		return m.GravityY
	}
	return 0
}

func (m *Signature_SensorInfo) GetGravityZ() float64 {
	if m != nil {
		return m.GravityZ
	}
	return 0
}

func (m *Signature_SensorInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type Signature_DeviceInfo struct {
	DeviceId              string `protobuf:"bytes,1,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	AndroidBoardName      string `protobuf:"bytes,2,opt,name=android_board_name,json=androidBoardName" json:"android_board_name,omitempty"`
	AndroidBootloader     string `protobuf:"bytes,3,opt,name=android_bootloader,json=androidBootloader" json:"android_bootloader,omitempty"`
	DeviceBrand           string `protobuf:"bytes,4,opt,name=device_brand,json=deviceBrand" json:"device_brand,omitempty"`
	DeviceModel           string `protobuf:"bytes,5,opt,name=device_model,json=deviceModel" json:"device_model,omitempty"`
	DeviceModelIdentifier string `protobuf:"bytes,6,opt,name=device_model_identifier,json=deviceModelIdentifier" json:"device_model_identifier,omitempty"`
	DeviceModelBoot       string `protobuf:"bytes,7,opt,name=device_model_boot,json=deviceModelBoot" json:"device_model_boot,omitempty"`
	HardwareManufacturer  string `protobuf:"bytes,8,opt,name=hardware_manufacturer,json=hardwareManufacturer" json:"hardware_manufacturer,omitempty"`
	HardwareModel         string `protobuf:"bytes,9,opt,name=hardware_model,json=hardwareModel" json:"hardware_model,omitempty"`
	FirmwareBrand         string `protobuf:"bytes,10,opt,name=firmware_brand,json=firmwareBrand" json:"firmware_brand,omitempty"`
	FirmwareTags          string `protobuf:"bytes,12,opt,name=firmware_tags,json=firmwareTags" json:"firmware_tags,omitempty"`
	FirmwareType          string `protobuf:"bytes,13,opt,name=firmware_type,json=firmwareType" json:"firmware_type,omitempty"`
	FirmwareFingerprint   string `protobuf:"bytes,14,opt,name=firmware_fingerprint,json=firmwareFingerprint" json:"firmware_fingerprint,omitempty"`
}

func (m *Signature_DeviceInfo) Reset()                    { *m = Signature_DeviceInfo{} }
func (m *Signature_DeviceInfo) String() string            { return proto.CompactTextString(m) }
func (*Signature_DeviceInfo) ProtoMessage()               {}
func (*Signature_DeviceInfo) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{3, 3} }

func (m *Signature_DeviceInfo) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Signature_DeviceInfo) GetAndroidBoardName() string {
	if m != nil {
		return m.AndroidBoardName
	}
	return ""
}

func (m *Signature_DeviceInfo) GetAndroidBootloader() string {
	if m != nil {
		return m.AndroidBootloader
	}
	return ""
}

func (m *Signature_DeviceInfo) GetDeviceBrand() string {
	if m != nil {
		return m.DeviceBrand
	}
	return ""
}

func (m *Signature_DeviceInfo) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *Signature_DeviceInfo) GetDeviceModelIdentifier() string {
	if m != nil {
		return m.DeviceModelIdentifier
	}
	return ""
}

func (m *Signature_DeviceInfo) GetDeviceModelBoot() string {
	if m != nil {
		return m.DeviceModelBoot
	}
	return ""
}

func (m *Signature_DeviceInfo) GetHardwareManufacturer() string {
	if m != nil {
		return m.HardwareManufacturer
	}
	return ""
}

func (m *Signature_DeviceInfo) GetHardwareModel() string {
	if m != nil {
		return m.HardwareModel
	}
	return ""
}

func (m *Signature_DeviceInfo) GetFirmwareBrand() string {
	if m != nil {
		return m.FirmwareBrand
	}
	return ""
}

func (m *Signature_DeviceInfo) GetFirmwareTags() string {
	if m != nil {
		return m.FirmwareTags
	}
	return ""
}

func (m *Signature_DeviceInfo) GetFirmwareType() string {
	if m != nil {
		return m.FirmwareType
	}
	return ""
}

func (m *Signature_DeviceInfo) GetFirmwareFingerprint() string {
	if m != nil {
		return m.FirmwareFingerprint
	}
	return ""
}

// Only used in iOS - Android just sends an empty version
type Signature_ActivityStatus struct {
	// all of these had 1 as their value
	StartTimeMs   uint64 `protobuf:"varint,1,opt,name=start_time_ms,json=startTimeMs" json:"start_time_ms,omitempty"`
	UnknownStatus bool   `protobuf:"varint,2,opt,name=unknown_status,json=unknownStatus" json:"unknown_status,omitempty"`
	Walking       bool   `protobuf:"varint,3,opt,name=walking" json:"walking,omitempty"`
	Running       bool   `protobuf:"varint,4,opt,name=running" json:"running,omitempty"`
	Stationary    bool   `protobuf:"varint,5,opt,name=stationary" json:"stationary,omitempty"`
	Automotive    bool   `protobuf:"varint,6,opt,name=automotive" json:"automotive,omitempty"`
	Tilting       bool   `protobuf:"varint,7,opt,name=tilting" json:"tilting,omitempty"`
	Cycling       bool   `protobuf:"varint,8,opt,name=cycling" json:"cycling,omitempty"`
	Status        []byte `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *Signature_ActivityStatus) Reset()                    { *m = Signature_ActivityStatus{} }
func (m *Signature_ActivityStatus) String() string            { return proto.CompactTextString(m) }
func (*Signature_ActivityStatus) ProtoMessage()               {}
func (*Signature_ActivityStatus) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{3, 4} }

func (m *Signature_ActivityStatus) GetStartTimeMs() uint64 {
	if m != nil {
		return m.StartTimeMs
	}
	return 0
}

func (m *Signature_ActivityStatus) GetUnknownStatus() bool {
	if m != nil {
		return m.UnknownStatus
	}
	return false
}

func (m *Signature_ActivityStatus) GetWalking() bool {
	if m != nil {
		return m.Walking
	}
	return false
}

func (m *Signature_ActivityStatus) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *Signature_ActivityStatus) GetStationary() bool {
	if m != nil {
		return m.Stationary
	}
	return false
}

func (m *Signature_ActivityStatus) GetAutomotive() bool {
	if m != nil {
		return m.Automotive
	}
	return false
}

func (m *Signature_ActivityStatus) GetTilting() bool {
	if m != nil {
		return m.Tilting
	}
	return false
}

func (m *Signature_ActivityStatus) GetCycling() bool {
	if m != nil {
		return m.Cycling
	}
	return false
}

func (m *Signature_ActivityStatus) GetStatus() []byte {
	if m != nil {
		return m.Status
	}
	return nil
}

// Just a junk message to denote that we don't currently know what message something is.
type UnknownMessage struct {
}

func (m *UnknownMessage) Reset()                    { *m = UnknownMessage{} }
func (m *UnknownMessage) String() string            { return proto.CompactTextString(m) }
func (*UnknownMessage) ProtoMessage()               {}
func (*UnknownMessage) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{4} }

func init() {
	proto.RegisterType((*AuthTicket)(nil), "SUNProtos.Networking.Envelopes.AuthTicket")
	proto.RegisterType((*RequestEnvelope)(nil), "SUNProtos.Networking.Envelopes.RequestEnvelope")
	proto.RegisterType((*RequestEnvelope_AuthInfo)(nil), "SUNProtos.Networking.Envelopes.RequestEnvelope.AuthInfo")
	proto.RegisterType((*RequestEnvelope_AuthInfo_JWT)(nil), "SUNProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.JWT")
	proto.RegisterType((*RequestEnvelope_PlatformRequest)(nil), "SUNProtos.Networking.Envelopes.RequestEnvelope.PlatformRequest")
	proto.RegisterType((*ResponseEnvelope)(nil), "SUNProtos.Networking.Envelopes.ResponseEnvelope")
	proto.RegisterType((*ResponseEnvelope_PlatformResponse)(nil), "SUNProtos.Networking.Envelopes.ResponseEnvelope.PlatformResponse")
	proto.RegisterType((*Signature)(nil), "SUNProtos.Networking.Envelopes.Signature")
	proto.RegisterType((*Signature_LocationFix)(nil), "SUNProtos.Networking.Envelopes.Signature.LocationFix")
	proto.RegisterType((*Signature_AndroidGpsInfo)(nil), "SUNProtos.Networking.Envelopes.Signature.AndroidGpsInfo")
	proto.RegisterType((*Signature_SensorInfo)(nil), "SUNProtos.Networking.Envelopes.Signature.SensorInfo")
	proto.RegisterType((*Signature_DeviceInfo)(nil), "SUNProtos.Networking.Envelopes.Signature.DeviceInfo")
	proto.RegisterType((*Signature_ActivityStatus)(nil), "SUNProtos.Networking.Envelopes.Signature.ActivityStatus")
	proto.RegisterType((*UnknownMessage)(nil), "SUNProtos.Networking.Envelopes.UnknownMessage")
	proto.RegisterEnum("SUNProtos.Networking.Envelopes.ResponseEnvelope_StatusCode", ResponseEnvelope_StatusCode_name, ResponseEnvelope_StatusCode_value)
}

func init() { proto.RegisterFile("networking_envelopes.proto", fileDescriptor16) }

var fileDescriptor16 = []byte{
	// 2072 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xcd, 0x72, 0xdb, 0xc8,
	0x11, 0x5e, 0x90, 0xa2, 0x44, 0x36, 0x25, 0x92, 0x1a, 0x59, 0x32, 0xcc, 0x75, 0x1c, 0x46, 0x5b,
	0xde, 0x65, 0x6d, 0x12, 0xa6, 0x44, 0xff, 0xac, 0x5d, 0x49, 0x2a, 0x45, 0xdb, 0x74, 0x56, 0x6b,
	0x8b, 0x52, 0x86, 0x54, 0xfc, 0x53, 0xa9, 0x42, 0x8d, 0x89, 0x21, 0x89, 0x32, 0x08, 0x30, 0x98,
	0xa1, 0x24, 0xea, 0x98, 0x4b, 0x1e, 0x22, 0x55, 0x79, 0x86, 0x5c, 0x73, 0xcb, 0x13, 0xe4, 0x0d,
	0x72, 0xca, 0x53, 0xe4, 0x96, 0x9a, 0x1e, 0x0c, 0x00, 0xd2, 0xb2, 0xbd, 0xde, 0xe4, 0x86, 0xee,
	0xaf, 0xbb, 0x31, 0x68, 0x7c, 0xfd, 0x03, 0x40, 0x3d, 0xe0, 0xf2, 0x3c, 0x8c, 0xde, 0x7a, 0xc1,
	0xd8, 0xe1, 0xc1, 0x19, 0xf7, 0xc3, 0x19, 0x17, 0xad, 0x59, 0x14, 0xca, 0x90, 0xdc, 0xea, 0x9f,
	0xf6, 0x4e, 0xd4, 0x95, 0x68, 0xf5, 0x12, 0xab, 0x56, 0xd7, 0x58, 0xd5, 0x6f, 0x64, 0x7c, 0x23,
	0xfe, 0xc7, 0x39, 0x17, 0x32, 0x76, 0x5d, 0x82, 0x66, 0x3e, 0x93, 0xa3, 0x30, 0x9a, 0x6a, 0x68,
	0xdf, 0x05, 0xe8, 0xcc, 0xe5, 0x64, 0xe0, 0x0d, 0xdf, 0x72, 0x49, 0xae, 0x41, 0x41, 0x48, 0x16,
	0x49, 0xdb, 0x6a, 0x58, 0xcd, 0x4d, 0xaa, 0x05, 0xd2, 0x82, 0x1d, 0x7e, 0x31, 0xf3, 0x22, 0xee,
	0x48, 0x6f, 0xca, 0x85, 0x64, 0xd3, 0x99, 0x33, 0x15, 0x76, 0xae, 0x61, 0x35, 0xd7, 0xe8, 0xb6,
	0x86, 0x06, 0x06, 0x39, 0x12, 0xa4, 0x06, 0x79, 0x1e, 0xb8, 0x76, 0x1e, 0x63, 0xa8, 0xcb, 0xfd,
	0xff, 0xac, 0x43, 0x95, 0xea, 0x33, 0x99, 0x03, 0x93, 0x1f, 0x43, 0x59, 0x48, 0x26, 0xe7, 0xc2,
	0x19, 0x86, 0x2e, 0xc7, 0x3b, 0x16, 0x28, 0x68, 0xd5, 0xe3, 0xd0, 0xe5, 0xe4, 0x47, 0x00, 0xf1,
	0x73, 0x38, 0x9e, 0x8e, 0xb6, 0x46, 0x4b, 0xb1, 0xe6, 0xd0, 0x25, 0x8f, 0xa0, 0x68, 0x1e, 0xd3,
	0x5e, 0x6b, 0xe4, 0x9b, 0xe5, 0xf6, 0x97, 0xad, 0x2b, 0x53, 0x44, 0x4d, 0x32, 0xe2, 0x0b, 0x9a,
	0xf8, 0x11, 0x1f, 0xb6, 0x4d, 0x3e, 0x92, 0x9c, 0xd9, 0xeb, 0x18, 0xec, 0x37, 0xad, 0x0f, 0xe7,
	0xbb, 0xb5, 0xf2, 0x3c, 0xad, 0x93, 0x38, 0x90, 0xb9, 0x4b, 0x6d, 0xb6, 0xac, 0x10, 0xa4, 0x0e,
	0x45, 0x9f, 0x49, 0x4f, 0xce, 0x5d, 0x6e, 0x6f, 0x34, 0xac, 0xa6, 0x45, 0x13, 0x99, 0xdc, 0x84,
	0x92, 0x1f, 0x06, 0x63, 0x0d, 0x16, 0x11, 0x4c, 0x15, 0xca, 0x93, 0x0d, 0x87, 0xf3, 0x88, 0x0d,
	0x17, 0x76, 0x49, 0x7b, 0x1a, 0x99, 0x9c, 0x42, 0x89, 0xcd, 0xe5, 0xc4, 0xf1, 0x82, 0x51, 0x68,
	0x43, 0xc3, 0x6a, 0x96, 0xdb, 0x0f, 0x3e, 0xf5, 0xec, 0x8a, 0x02, 0x87, 0xc1, 0x28, 0xa4, 0x45,
	0x16, 0x5f, 0x91, 0x67, 0x50, 0xc6, 0xb0, 0x12, 0x99, 0x61, 0x97, 0x31, 0xf0, 0xd7, 0x1f, 0x0b,
	0x9c, 0x72, 0x89, 0x02, 0x4b, 0x79, 0xf5, 0x10, 0x6e, 0x4c, 0x85, 0x23, 0xbc, 0x60, 0xc8, 0x1d,
	0x9f, 0x09, 0xe9, 0xf8, 0xe1, 0x90, 0x49, 0x2f, 0x0c, 0x46, 0xde, 0x85, 0xbd, 0xd9, 0xb0, 0x9a,
	0x79, 0xba, 0x37, 0x15, 0x7d, 0x85, 0x3f, 0x67, 0x42, 0x3e, 0x4f, 0xd1, 0xfa, 0xdf, 0x2d, 0x28,
	0x9a, 0xe3, 0xa9, 0x3c, 0xcc, 0xa2, 0xf0, 0xcc, 0x73, 0x79, 0x84, 0x84, 0x29, 0xd1, 0x44, 0x26,
	0x14, 0x0a, 0x32, 0x7c, 0xcb, 0x03, 0xe4, 0x65, 0xb9, 0xfd, 0xab, 0x1f, 0x9a, 0x83, 0xd6, 0x77,
	0x2f, 0x06, 0x54, 0x87, 0xaa, 0xff, 0x1a, 0xf2, 0xdf, 0xbd, 0x18, 0xa8, 0xdb, 0x0e, 0xc3, 0x40,
	0xf2, 0x40, 0x0a, 0x73, 0x5b, 0x23, 0x2b, 0x6c, 0x1e, 0xbc, 0x0d, 0xc2, 0xf3, 0xa0, 0x8d, 0x77,
	0x2e, 0xd0, 0x44, 0xae, 0xff, 0xc9, 0x82, 0xea, 0x0a, 0x2d, 0xc8, 0x53, 0x58, 0x93, 0x8b, 0x99,
	0xe6, 0x7b, 0xa5, 0xdd, 0xbe, 0xfa, 0x94, 0xc6, 0x69, 0x95, 0x54, 0x83, 0xc5, 0x8c, 0x53, 0xf4,
	0x27, 0x5f, 0x41, 0xd5, 0x54, 0xc7, 0x94, 0x0b, 0xc1, 0xc6, 0x1c, 0x6f, 0xbf, 0x49, 0x2b, 0xb1,
	0xfa, 0x48, 0x6b, 0xf7, 0xff, 0x59, 0x80, 0x1a, 0xe5, 0x62, 0x16, 0x06, 0x82, 0x27, 0xc5, 0xf7,
	0x87, 0x77, 0x8b, 0xaf, 0xd2, 0xfe, 0xe5, 0xc7, 0x53, 0xb6, 0x1c, 0xa6, 0xd5, 0x4f, 0xaa, 0xf5,
	0x03, 0x95, 0x9b, 0x5b, 0xad, 0xdc, 0xeb, 0xb0, 0xc1, 0x66, 0x9e, 0x33, 0x8f, 0x7c, 0xac, 0xea,
	0x12, 0x5d, 0x67, 0x33, 0xef, 0x34, 0xf2, 0x89, 0x0f, 0xb5, 0x4c, 0x39, 0xca, 0x79, 0x14, 0x98,
	0x6a, 0xec, 0x7c, 0xf2, 0xd1, 0xd2, 0xcc, 0x69, 0x80, 0x56, 0xd3, 0x7a, 0xc4, 0xc8, 0xab, 0x0c,
	0xdf, 0xf8, 0x9f, 0x18, 0x6e, 0xc3, 0x86, 0x39, 0xb1, 0xdb, 0xc8, 0x37, 0x37, 0xa9, 0x11, 0x55,
	0x4f, 0xe5, 0x51, 0x14, 0x46, 0x36, 0xc7, 0x67, 0xd5, 0x42, 0xfd, 0x0c, 0x6a, 0xab, 0x27, 0xfc,
	0xbf, 0x51, 0xa3, 0xae, 0x3a, 0xa3, 0x8e, 0x19, 0x73, 0x22, 0x91, 0xf7, 0xff, 0x61, 0x01, 0xa4,
	0x6f, 0x8d, 0x94, 0x61, 0xe3, 0xb4, 0xf7, 0xac, 0x77, 0xfc, 0xa2, 0x57, 0xfb, 0x8c, 0xac, 0x43,
	0xee, 0xf8, 0x59, 0xcd, 0x22, 0x75, 0xd8, 0x3b, 0x7e, 0xe6, 0xd0, 0x93, 0xc7, 0xce, 0x29, 0x7d,
	0xee, 0x1c, 0xf6, 0x1c, 0xda, 0xed, 0x9f, 0x1c, 0xf7, 0xfa, 0xdd, 0x5a, 0x8e, 0x54, 0xa1, 0xfc,
	0xa8, 0xf3, 0xc4, 0xa1, 0xdd, 0xdf, 0x9d, 0x76, 0xfb, 0x83, 0x5a, 0x9e, 0xec, 0x40, 0xf5, 0xb0,
	0xf7, 0xfb, 0xce, 0xf3, 0xc3, 0x54, 0x79, 0x87, 0xdc, 0x04, 0xdb, 0x28, 0x4f, 0x9e, 0x77, 0x06,
	0x4f, 0x8f, 0xe9, 0x51, 0x82, 0xde, 0x25, 0x9b, 0x50, 0xa4, 0xdd, 0x27, 0x87, 0xb4, 0xfb, 0x78,
	0x50, 0xbb, 0x47, 0xae, 0xc3, 0x4e, 0xbf, 0xdb, 0xef, 0x1f, 0x1e, 0xf7, 0x9c, 0xd8, 0xa7, 0x33,
	0xe8, 0x3e, 0xa9, 0xb9, 0x64, 0x0f, 0x88, 0x09, 0xd2, 0x39, 0x1d, 0x7c, 0xeb, 0x0c, 0x8e, 0x9f,
	0x75, 0x7b, 0xb5, 0xd1, 0xfe, 0xbf, 0xea, 0x50, 0xea, 0x7b, 0xe3, 0x80, 0xc9, 0x79, 0xa4, 0x92,
	0xb6, 0x3e, 0xf2, 0xb8, 0xef, 0x1e, 0xd8, 0x16, 0x32, 0xa5, 0xf5, 0xb1, 0x17, 0x78, 0xaa, 0xab,
	0x33, 0x2e, 0x0f, 0x1a, 0x7b, 0x93, 0x36, 0xec, 0xa6, 0xd3, 0x4d, 0x77, 0x2a, 0x3d, 0x0a, 0x35,
	0x7d, 0x77, 0x12, 0x10, 0xbb, 0x54, 0x1f, 0x07, 0xe3, 0x5e, 0x7c, 0xef, 0x3b, 0x86, 0xc7, 0x5a,
	0x22, 0x2f, 0x61, 0xd3, 0x34, 0x38, 0x47, 0x75, 0x38, 0x3d, 0x9e, 0xee, 0x7d, 0xec, 0x64, 0xc9,
	0x43, 0xb5, 0x4c, 0x03, 0x7c, 0xea, 0x5d, 0xd0, 0xb2, 0x9f, 0x0a, 0xa4, 0x0f, 0xc5, 0xf1, 0x4c,
	0xe8, 0x5e, 0x5f, 0xc0, 0xa8, 0x0f, 0xbe, 0x7f, 0xd4, 0x4e, 0xe0, 0x46, 0xa1, 0xe7, 0xfe, 0x76,
	0x26, 0xb0, 0xd7, 0x6f, 0x8c, 0xf5, 0x45, 0x92, 0xc2, 0xfb, 0x71, 0xb1, 0xfd, 0xb0, 0x14, 0xde,
	0x27, 0xa7, 0x50, 0x16, 0x3c, 0x10, 0x61, 0xa4, 0xcf, 0xb7, 0x81, 0xc1, 0xee, 0x7e, 0xff, 0xf3,
	0xf5, 0xd1, 0x19, 0xcf, 0x06, 0x22, 0xb9, 0x56, 0x61, 0x5d, 0x7e, 0xe6, 0x0d, 0xb9, 0x0e, 0x5b,
	0xc4, 0x3a, 0xfd, 0x84, 0xb0, 0x4f, 0xd0, 0x59, 0x87, 0x75, 0x93, 0x6b, 0xc2, 0xa0, 0xca, 0x86,
	0xd2, 0x3b, 0xf3, 0xe4, 0xc2, 0xd1, 0xbd, 0x0b, 0x47, 0xeb, 0xa7, 0x65, 0x34, 0x0e, 0xa0, 0x2b,
	0x8a, 0x56, 0xd8, 0x92, 0x4c, 0x6e, 0x43, 0x25, 0xe1, 0xc1, 0x84, 0x89, 0xc9, 0x01, 0xce, 0xe7,
	0x02, 0xdd, 0x32, 0xda, 0x6f, 0x95, 0x52, 0xf5, 0x0e, 0x4d, 0xc2, 0x03, 0x1c, 0xb3, 0x45, 0x6a,
	0xc4, 0x14, 0x69, 0xe3, 0x94, 0x4c, 0x90, 0x76, 0x8a, 0xdc, 0xb1, 0xb7, 0x30, 0xa6, 0x11, 0x53,
	0xe4, 0xae, 0x5d, 0xc9, 0x22, 0x77, 0x53, 0xe4, 0x9e, 0x5d, 0x45, 0xbe, 0x1a, 0x31, 0x45, 0xee,
	0xdb, 0xb5, 0xac, 0xcf, 0xfd, 0x14, 0xf9, 0xc6, 0xde, 0xce, 0xfa, 0x7c, 0x93, 0x22, 0x0f, 0x6c,
	0x92, 0x45, 0x1e, 0xa4, 0xc8, 0x43, 0x7b, 0x27, 0x7b, 0xea, 0x87, 0xef, 0x24, 0xa4, 0x6d, 0x5f,
	0x7b, 0x37, 0x21, 0xe9, 0xc3, 0xb5, 0x0f, 0xec, 0xdd, 0x4c, 0x80, 0xf6, 0x01, 0xf9, 0x09, 0x6c,
	0x0a, 0x2e, 0x84, 0xf1, 0xb7, 0xf7, 0xb0, 0xbd, 0x95, 0x63, 0x9d, 0xf2, 0x56, 0x9b, 0x54, 0x52,
	0xab, 0xf6, 0x75, 0x3d, 0x7b, 0x12, 0x85, 0x0a, 0x60, 0x46, 0x13, 0x06, 0xb0, 0x1b, 0xf9, 0xe6,
	0x1a, 0x2d, 0xc7, 0x3a, 0x13, 0xc0, 0x4c, 0xf0, 0x7b, 0xf6, 0x0d, 0x5c, 0x4e, 0x52, 0x45, 0xfd,
	0xaf, 0x79, 0x28, 0x67, 0xca, 0xf3, 0x83, 0x2b, 0xc9, 0xcf, 0x81, 0x64, 0x7a, 0x4a, 0xc0, 0x66,
	0x62, 0x12, 0x9a, 0x86, 0xb2, 0x9d, 0x36, 0x94, 0x18, 0xc0, 0x2d, 0xcf, 0x8f, 0xf7, 0xc3, 0xb5,
	0x86, 0xd5, 0xcc, 0xd1, 0x44, 0x5e, 0xda, 0x1d, 0xb7, 0x34, 0x76, 0xf5, 0xee, 0x58, 0x41, 0x30,
	0xb3, 0x3b, 0xaa, 0x9d, 0x7e, 0xc6, 0xb9, 0x8b, 0x6f, 0x29, 0x47, 0xb5, 0xa0, 0x5a, 0xd7, 0x30,
	0x9c, 0x47, 0x82, 0xe3, 0x1b, 0xc8, 0xd1, 0x58, 0x22, 0xbf, 0x80, 0x9d, 0x49, 0x18, 0x79, 0x97,
	0x61, 0x20, 0x99, 0xef, 0x24, 0x4b, 0xe7, 0x2e, 0x1a, 0x91, 0x14, 0xea, 0x98, 0xf5, 0xf3, 0xa7,
	0xb0, 0x7d, 0xc6, 0x23, 0xe9, 0x0d, 0xb3, 0xe6, 0x7b, 0x68, 0x5e, 0x33, 0x40, 0x62, 0xfc, 0x15,
	0x54, 0x4d, 0x72, 0x4c, 0xcd, 0xd5, 0x31, 0x1b, 0x15, 0xa3, 0x8e, 0x2b, 0xe7, 0x1a, 0x14, 0x46,
	0x7e, 0x18, 0x46, 0xf6, 0xe7, 0x0d, 0xab, 0xb9, 0x45, 0xb5, 0x40, 0xbe, 0x80, 0x84, 0x28, 0x0e,
	0x4e, 0xca, 0x9b, 0xe8, 0x9c, 0x34, 0x5b, 0x35, 0x03, 0xeb, 0x7f, 0xce, 0x41, 0x65, 0xb9, 0xd3,
	0x91, 0x5b, 0x50, 0x56, 0xd9, 0x76, 0x64, 0x88, 0xed, 0xd8, 0x4a, 0x49, 0x31, 0x08, 0xd5, 0x3b,
	0xbc, 0x0d, 0x15, 0xc1, 0x24, 0xf7, 0x7d, 0x4f, 0x72, 0xe1, 0xcc, 0x22, 0xb5, 0x43, 0xe6, 0x15,
	0x2d, 0x53, 0xed, 0x49, 0x14, 0x28, 0x5a, 0xb2, 0x4b, 0x6f, 0x3a, 0x97, 0x13, 0x3b, 0xdf, 0xc8,
	0x37, 0x73, 0xd4, 0x88, 0xea, 0x0d, 0x70, 0x9f, 0x9f, 0xe1, 0x21, 0xb0, 0xdb, 0xe7, 0x68, 0xaa,
	0x50, 0xdf, 0x43, 0x22, 0x88, 0xb0, 0x5f, 0xe7, 0xa8, 0xba, 0x54, 0xdf, 0x3e, 0x13, 0x26, 0x1c,
	0xe6, 0x4f, 0x59, 0xc0, 0x86, 0xd8, 0x76, 0x8b, 0x14, 0x26, 0x4c, 0x74, 0xb4, 0x46, 0x3d, 0xa9,
	0x32, 0xe0, 0xb3, 0x09, 0x9f, 0xf2, 0xc8, 0x13, 0xd8, 0x4c, 0x8b, 0x74, 0x73, 0xc2, 0x44, 0xd7,
	0xe8, 0xd4, 0x63, 0xcd, 0x05, 0x77, 0x1d, 0x4f, 0x4f, 0x99, 0x22, 0x9a, 0x94, 0x94, 0xea, 0x50,
	0x51, 0xb3, 0xfe, 0xef, 0x02, 0x40, 0xda, 0x53, 0xdf, 0xc3, 0x46, 0xeb, 0x7d, 0x6c, 0x6c, 0xc3,
	0xae, 0xef, 0x05, 0x9c, 0x45, 0xea, 0xb5, 0x72, 0x9f, 0x47, 0x3a, 0xef, 0x17, 0x38, 0xeb, 0x2c,
	0xba, 0xa3, 0xc1, 0x4e, 0x06, 0x7b, 0xf9, 0x3e, 0x9f, 0x05, 0xd2, 0xf9, 0x4a, 0x9f, 0x57, 0xef,
	0xf3, 0xb9, 0xb4, 0x0b, 0xef, 0xf3, 0x79, 0x4d, 0x9a, 0x50, 0x9b, 0xb2, 0x71, 0xc0, 0xa5, 0x37,
	0x74, 0xb0, 0x35, 0x38, 0x17, 0xf6, 0x3a, 0x9a, 0x57, 0x8c, 0xfe, 0xa9, 0x52, 0xbf, 0xbc, 0xc2,
	0x72, 0x11, 0x7f, 0x7b, 0x2d, 0x5b, 0xbe, 0xba, 0xc2, 0xf2, 0x32, 0xfe, 0x10, 0x5b, 0xb6, 0x7c,
	0x4d, 0xee, 0xc3, 0xf5, 0x15, 0xcb, 0xa5, 0x8f, 0xb3, 0x02, 0xdd, 0x5d, 0x72, 0x48, 0xd8, 0x7f,
	0x1b, 0x2a, 0x4c, 0xea, 0x9a, 0x75, 0x66, 0x9e, 0x1c, 0x4e, 0x70, 0x1c, 0x58, 0x74, 0xcb, 0x68,
	0x4f, 0x94, 0x52, 0xb5, 0xa8, 0xc4, 0x6c, 0xc1, 0xce, 0x71, 0x26, 0x58, 0xb4, 0x6c, 0x74, 0xaf,
	0xd8, 0xb9, 0xa2, 0x47, 0x62, 0x12, 0x85, 0xbe, 0x8f, 0xd3, 0xc1, 0xa2, 0x89, 0x1f, 0x0d, 0x7d,
	0x9f, 0x7c, 0x09, 0xd5, 0x28, 0x94, 0x3a, 0x9b, 0x11, 0x93, 0xdc, 0xb9, 0xc0, 0xce, 0x61, 0xd1,
	0x2d, 0xa3, 0xa6, 0x4c, 0xf2, 0x97, 0xef, 0xda, 0x2d, 0xb0, 0x89, 0xac, 0xd8, 0xbd, 0x7a, 0xd7,
	0xee, 0x12, 0xc7, 0xc8, 0x8a, 0xdd, 0x6b, 0xf2, 0x39, 0x94, 0xc6, 0x11, 0xc3, 0xb9, 0x7a, 0x81,
	0xe3, 0xc4, 0xa2, 0xc5, 0x58, 0xf1, 0x32, 0x0b, 0x2e, 0x70, 0xa2, 0xa4, 0xe0, 0xab, 0x2c, 0x78,
	0x89, 0xed, 0x2a, 0x05, 0x5f, 0xab, 0x8e, 0x15, 0xb7, 0x8c, 0x1d, 0x4c, 0x72, 0x2c, 0xd5, 0xff,
	0xb6, 0x06, 0x90, 0x8e, 0x78, 0x15, 0xc3, 0x6c, 0x0b, 0xae, 0x69, 0xc8, 0xf1, 0xd4, 0x77, 0xc9,
	0xcf, 0x80, 0x30, 0xdd, 0x1a, 0x9c, 0x37, 0x21, 0x8b, 0x5c, 0x27, 0x60, 0x53, 0xbd, 0x23, 0x97,
	0x68, 0x2d, 0x46, 0x1e, 0x29, 0xa0, 0xc7, 0xa6, 0x5c, 0x15, 0x4c, 0x6a, 0x1d, 0x4a, 0x3f, 0x64,
	0xaa, 0xc9, 0xeb, 0x55, 0x6f, 0x3b, 0xb1, 0x36, 0x80, 0x7a, 0x6f, 0xf1, 0x9d, 0xdf, 0x44, 0x2c,
	0x70, 0x91, 0xf3, 0x25, 0x1a, 0xef, 0x2e, 0x8f, 0x94, 0x2a, 0x63, 0x32, 0x0d, 0x5d, 0xee, 0x23,
	0xc5, 0x13, 0x93, 0x23, 0xa5, 0x52, 0xe4, 0xca, 0x9a, 0x38, 0x9e, 0xcb, 0x03, 0xe9, 0x8d, 0x3c,
	0x1e, 0x21, 0xc3, 0x4b, 0x74, 0x37, 0x63, 0x7d, 0x98, 0x80, 0xe4, 0x6b, 0xd8, 0x5e, 0xf2, 0x53,
	0x27, 0x46, 0xa6, 0x97, 0x68, 0x35, 0xe3, 0xa1, 0xce, 0x4b, 0xee, 0xc0, 0xee, 0x84, 0x45, 0xee,
	0x39, 0x8b, 0xb8, 0x33, 0x65, 0xc1, 0x7c, 0xc4, 0x86, 0x6a, 0x9d, 0x89, 0x90, 0xef, 0x25, 0x7a,
	0xcd, 0x80, 0x47, 0x19, 0x4c, 0xb1, 0x37, 0x75, 0xc2, 0xd3, 0x97, 0xd0, 0x7a, 0x2b, 0xb1, 0xc6,
	0xf3, 0xdf, 0x86, 0xca, 0xc8, 0x8b, 0xa6, 0x68, 0xa6, 0xf3, 0x00, 0xda, 0xcc, 0x68, 0x75, 0x26,
	0xbe, 0x80, 0x44, 0xe1, 0x48, 0x36, 0x16, 0xc8, 0xe0, 0x12, 0xdd, 0x34, 0xca, 0x01, 0x1b, 0x8b,
	0x65, 0x23, 0xd5, 0xef, 0xb7, 0x56, 0x8c, 0xd4, 0xd7, 0xce, 0x01, 0x5c, 0x4b, 0x8c, 0x46, 0x5e,
	0x30, 0xe6, 0xd1, 0x2c, 0xf2, 0x02, 0x89, 0x1c, 0x2e, 0xd1, 0x1d, 0x83, 0x3d, 0x4d, 0xa1, 0xfa,
	0x5f, 0xd4, 0x88, 0x58, 0x5e, 0xd5, 0xf6, 0x61, 0x0b, 0xd7, 0x7d, 0xfc, 0xc5, 0xe5, 0x4c, 0x45,
	0xdc, 0x17, 0xcb, 0xa8, 0x1c, 0x78, 0x53, 0x7e, 0x84, 0xeb, 0x5c, 0xbc, 0x07, 0x98, 0xe1, 0x95,
	0xc3, 0xed, 0x64, 0x2b, 0xd6, 0xc6, 0xa1, 0x6c, 0xd8, 0x38, 0x67, 0xbe, 0xda, 0x19, 0x91, 0x2b,
	0x45, 0x6a, 0x44, 0xfc, 0x48, 0x9c, 0x07, 0x81, 0x42, 0xd6, 0x34, 0x12, 0x8b, 0xe4, 0x16, 0xe0,
	0xf7, 0xb3, 0x17, 0x06, 0x2c, 0x5a, 0x20, 0x2d, 0x8a, 0x34, 0xa3, 0x51, 0x38, 0x9b, 0xcb, 0x70,
	0x1a, 0x4a, 0xef, 0x8c, 0x23, 0x11, 0x8a, 0x34, 0xa3, 0x51, 0x91, 0xa5, 0xe7, 0x4b, 0x15, 0x79,
	0x43, 0x47, 0x8e, 0x45, 0x85, 0x0c, 0x17, 0x43, 0x5f, 0x21, 0x45, 0x8d, 0xc4, 0x62, 0xa6, 0xa0,
	0x4a, 0xb8, 0x45, 0xc5, 0xd2, 0x7e, 0x0d, 0x2a, 0xcb, 0x0b, 0xfe, 0xa3, 0xe2, 0xeb, 0x75, 0xfc,
	0x5b, 0x28, 0x4e, 0x3e, 0x3b, 0xb1, 0xde, 0xe8, 0xeb, 0x3b, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x62, 0x70, 0x1a, 0xa6, 0xad, 0x14, 0x00, 0x00,
}
